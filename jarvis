#!/usr/bin/python
import pygst

from interpreter import *

pygst.require('0.10')

import config,sys,time
from indicator import Indicator
from audio import OnlineRecognizer
from listener import Recognizer,main_loop
scheduler = config.SCHEDULER
interpreter = Interpreter(scheduler=config.SCHEDULER,inq=config.voice_queue,outq=config.results_queue)
import logging

LOG_FILENAME = 'log.out'
logging.basicConfig(filename=LOG_FILENAME,level=logging.INFO,)

logging.debug('This message should go to the log file')
#
from commands import *
from commands.remind import Remind

class StartProgram(object):

    def __init__(self):
        scheduler.start()
        config.SCHEDULER=scheduler
        self.listener=OnlineRecognizer()
        self.ind=Indicator(self)

    def exit(self):
        print 'shutting down'
        # self.listener.end()
        print 'killed speech recognition'
        try:
            scheduler.shutdown()
        except:
            interpreter.end()
        self.ind.main_quit()
        print 'scheduler stopped'
        print 'interpreter shutdown'
        sys.exit(0)

    def all_start(self):
        interpreter.start()
        self.ind.start()

    def switch(self,r,text):
        print text.lower()
        r.pause()
        if self.listener.online_recognition():
            r.listen()



@broadcast.connect
def start(sender,**kw):
    r=Remind()
    r.on_event(kw)
    scheduler.print_jobs()
    while(1):
        time.sleep(1)

if __name__ == "__main__":
    try:
        s=StartProgram()
        s.all_start()
        signal.signal(signal.SIGINT, signal.SIG_DFL)
        r=Recognizer(config.LANG_FILE,config.DIC_FILE)
        r.connect('finished',s.switch)
        r.listen()
        # scheduler.add_job(s.print_hello, 'date', name='testme', run_date='2016-01-12 18:35:00')
        print "starting"
        main_loop.run()

    except KeyboardInterrupt:
        r.pause()
        s.exit()
