#! /usr/bin/python
from listener import Listener
from interpreter import *
import config,sys
from audio import Recognizer
from utils import tts,pushlistener

def main():

    scheduler = config.SCHEDULER
    scheduler.start()
    config.listeners['scheduler']=scheduler


    # Load the commands in the interpreter. These dispatch commands. See the Interpreter's doc for details.
    interpreter = Interpreter(scheduler=config.SCHEDULER)
    for command in config.COMMANDS:
        interpreter.register(command)

    # Create a listener for pocketsphinx. It forwards recognized strings to Interpreters. See Listener's doc for details.
    # listener = Listener(fsg_path=config.GRAMMAR_FILE, dict_path=config.DICT_FILE)
    # listener.register(interpreter)
    listener=Recognizer()
    listener.register(interpreter)
    listener.start()
    config.listeners['audio']=listener
    push_listener=pushlistener.Pushlistener()
    push_listener.register(interpreter)
    push_listener.start()
    config.listeners['pb']=push_listener
    # And wait...
    try:
        raw_input()
    except KeyboardInterrupt:
        # texttospeech.text_to_speech("until next time")
        sys.exit(0)
    def stop():
        listener.end()
if __name__ == "__main__":
    main()
